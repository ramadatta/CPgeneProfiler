# Chunk 1: car
data(iris)
head(iris)
# Chunk 2: scp
input <- iris[,c('Sepal.Length')]
#head(input)
plot(input, xlab="Sepal", ylab="length", pch=21,  bg=" orange ")
#plot(Sepal.Length ~ input, col='red')
# Chunk 3: mscp1
library(ggvis)
iris %>% ggvis(~Sepal.Length, ~Sepal.Width, fill = ~Species) %>% layer_points()
# Chunk 4: mscp2
library(ggvis)
iris %>% ggvis(~Petal.Length, ~Petal.Width, fill = ~Species) %>% layer_points()
# Chunk 5: mscp3
library(ggvis)
iris %>% ggvis(~Petal.Length, ~Sepal.Length, fill = ~Species) %>% layer_points()
# Chunk 6: mscp4
library(ggvis)
iris %>% ggvis(~Petal.Width, ~Sepal.Width, fill = ~Species) %>% layer_points()
# Chunk 7: pressure
plot(pressure)
dev.off()
tinytex::install_tinytex()
tinytex::reinstall_tinytex()
tinytex::install_tinytex()
knit_with_parameters('~/Desktop/CPE/ProkkaVis/ProkkaVis.Rmd')
unlink('Desktop/CPE/ProkkaVis/ProkkaVis_cache', recursive = TRUE)
remotes::install_github('rstudio/rmarkdown')
tinytex::parse_packages(files = "footnote.sty")
tinytex::parse_packages(files = "footnote.sty")
tinytex::tlmgr_install("mdwtools")
remotes::install_github("rstudio/rticles")
library(rtcles)
library(rticles)
cpblast("/home/datta/Desktop/CPE/ReCPgeneProfiler/JOSS_Submission_PostReview/modular_test5_final_upload_forTesting/CPgeneProfiler/testData/fasta/","/home/datta/Desktop/CPE/ReCPgeneProfiler/JOSS_Submission_PostReview/modular_test5_final_upload_forTesting/CPgeneProfiler/testData/db/")
setwd("/home/datta/Desktop/CPE/ReCPgeneProfiler/JOSS_Submission_PostReview/modular_test5_final_upload_forTesting")
#create_package("CPgeneProfiler")
setwd("./CPgeneProfiler")
document()
#install.packages(c("devtools", "roxygen2"))
library("devtools")
library("roxygen2")
setwd("/home/datta/Desktop/CPE/ReCPgeneProfiler/JOSS_Submission_PostReview/modular_test5_final_upload_forTesting")
#create_package("CPgeneProfiler")
setwd("./CPgeneProfiler")
document()
setwd("..")
#?CPgeneProfiler
install("CPgeneProfiler")
#?CPgeneProfiler
library(CPgeneProfiler)
?CPgeneProfiler
?cpblast()
#install.packages(c("devtools", "roxygen2"))
library("devtools")
library("roxygen2")
setwd("/home/datta/Desktop/CPE/ReCPgeneProfiler/JOSS_Submission_PostReview/modular_test5_final_upload_forTesting")
#create_package("CPgeneProfiler")
setwd("./CPgeneProfiler")
document()
setwd("..")
#?CPgeneProfiler
install("CPgeneProfiler")
#?CPgeneProfiler
library(CPgeneProfiler)
?CPgeneProfiler
?cpblast()
cpblast("/home/datta/Desktop/CPE/ReCPgeneProfiler/JOSS_Submission_PostReview/modular_test5_final_upload_forTesting/CPgeneProfiler/testData/fasta/","/home/datta/Desktop/CPE/ReCPgeneProfiler/JOSS_Submission_PostReview/modular_test5_final_upload_forTesting/CPgeneProfiler/testData/db/")
?filt_blast()
filt_blast()
?cpprofile()
cpprofile()
?cocarriage()
cocarriage()
?plot_conlen()
plot_conlen()
?upsetR_plot()
upsetR_plot()
?assemblystat()
assemblystat(fastalocation = "/home/datta/Desktop/CPE/ReCPgeneProfiler/JOSS_Submission_PostReview/modular_test3_final/fasta2")
assemblystat(fastalocation = "/home/datta/Desktop/CPE/ReCPgeneProfiler/JOSS_Submission_PostReview/modular_test5_final_upload_forTesting/CPgeneProfiler/testData/fasta/")
?db_summary()
db_summary()
?cp_summarize()
cp_summarize()
remove.packages("CPgeneProfiler", lib="~/R/x86_64-pc-linux-gnu-library/3.6")
devtools::install_github("ramadatta/CPgeneProfiler")
sessionInfo()
#install.packages(c("devtools", "roxygen2"))
library("devtools")
library("roxygen2")
setwd("/home/datta/Desktop/CPE/ReCPgeneProfiler/JOSS_Submission_PostReview/modular_test5_final_upload_forTesting")
create_package("CPgeneProfiler")
setwd("/home/datta/Desktop/CPE/ReCPgeneProfiler/JOSS_Submission_PostReview/modular_test5_final_upload_forTesting")
setwd("/home/datta/Desktop/CPE/ReCPgeneProfiler/JOSS_Submission_PostReview/modular_test5_final_upload_forTesting")
#create_package("CPgeneProfiler")
setwd("./CPgeneProfiler")
document()
document()
devtools::install_github("ramadatta/CPgeneProfiler")
library(CPgeneProfiler)
?CPgeneProfiler
?cpblast()
?cocarriage()
CPgeneProfiler::upsetR_plot()
?CPgeneProfiler::upsetR_plot()
sessionInfo()
packageVersion("CPgeneProfiler")
getAnywhere("CPgeneProfiler")
